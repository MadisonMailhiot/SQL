--This file shows the SQL I wrote in SQLite to answer the following questions using a database for a fictional Digital Media Store that contains multiple tables.  

--1. Show Customers (their full names, customer ID, and country) who are not in the US. 

SELECT FirstName, LastName, CustomerID, Country FROM customers
WHERE Country <> 'USA'

--2. Show only the Customers from Brazil.

SELECT * FROM customers
WHERE Country = 'Brazil' 

--3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry FROM invoices i
LEFT JOIN customers c
ON i.CustomerId = c.CustomerId
WHERE i.BillingCountry = 'Brazil'

--4. Show the Employees who are Sales Agents.
SELECT * FROM employees
WHERE Title = 'Sales Support Agent'

--5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry FROM invoices

--6. Provide a query that shows the invoice IDs associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.FirstName, e.LastName, i.InvoiceId FROM employees e
JOIN customers c
ON e.EmployeeId = c.SupportRepId
JOIN invoices i
ON c.CustomerId = i.CustomerId

--7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT i.Total as InvoiceTotal, c.FirstName as CustFirstName, c.LastName as CustLastName, e.FirstName as EmpFirstName, e.LastName as EmpLastName, c.Country
FROM employees e
JOIN customers c
ON e.EmployeeID = c.SupportRepId
JOIN invoices i
ON i.CustomerID = c.CustomerId 

--8. How many Invoices were there in 2009?

SELECT COUNT(InvoiceId) 
FROM invoices
WHERE InvoiceDate LIKE '2009%' 

--9. What are the total sales for 2009?

SELECT SUM(Total) 
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

--10. Write a query that includes the purchased track name with each invoice line ID.

SELECT t.Name, ii.InvoiceLineID FROM tracks t
JOIN invoice_items ii
ON t.TrackID = ii.TrackID

--11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT t.Name as Track, artists.Name as Artist, i.InvoiceLineId
FROM invoice_items i
LEFT JOIN tracks t
ON i.TrackId = t.TrackID
INNER JOIN albums a
ON t.AlbumID = a.AlbumID
LEFT JOIN artists
ON a.ArtistID = artists.ArtistID 

--12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.Name as Track, albums.Title as Album, media_types.Name as Media_Type, genres.Name as Genre
FROM tracks
JOIN albums
ON tracks.AlbumID = albums.AlbumId
JOIN media_types
ON tracks.MediaTypeId = media_types.MediaTypeId
JOIN genres
ON tracks.GenreId = genres.GenreId 

--13. Show the total sales made by each sales agent.

SELECT e.FirstName, e.LastName, ROUND(SUM(i.total), 2) AS Total
FROM employees e
JOIN customers c
ON e.EmployeeID = c.SupportRepID
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.EmployeeId

--14. Which sales agent made the most dollars in sales in 2009? 

SELECT e.FirstName, e.LastName, ROUND(SUM(i.total), 2) AS Total
FROM employees e
JOIN customers c
ON e.EmployeeID = c.SupportRepID
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
AND i.InvoiceDate LIKE '2009%'
GROUP BY e.EmployeeId
ORDER BY Total DESC
LIMIT 1
